name: OpenTofu Deployment onto Self Hosted Kubernetes Cluster

on:
  workflow_call:
    inputs:
      deployment_name:
        description: Name of the deployment to be performed
        required: true
        type: string
      folder_path:
        description: Path for the deployment to be performed
        required: true
        type: string
      runners:
        description: Self Hosted Runners to be used for deployment
        required: true
        type: string
      pre_init_script:
        description: Script to run before running Tofu Init
        default: ''
        required: false
        type: string
      pre_plan_script:
        description: Script to run before running Tofu Plan
        default: ''
        required: false
        type: string
      pre_apply_script:
        description: Script to run before running Tofu Apply
        default: ''
        required: false
        type: string
      post_apply_script:
        description: Script to run after running Tofu Apply
        default: ''
        required: false
        type: string
      artifact_version:
        description: Artifact Version for deploying using OpenTofu
        default: latest
        required: false
        type: string
    secrets:
      KUBECONFIG:
        description: KubeConfig to be used for deployment for Kubernetes resources
        required: true

      TFVARS:
        description: TFVARS File to be used for deployment for Kubernetes resources
        required: true

jobs:
  tofu_deploy:
    name: Deploying ${{ inputs.deployment_name }} onto Self Hosted Kubernetes Cluster
    runs-on: [self-hosted, linux, '${{ inputs.runners }}']
    env:
      KUBECONFIG: '/tmp/kubernetes/config.yml'
      KUBECONFIG_FOLDER: '/tmp/kubernetes'
      KUBE_CONFIG_PATH: '/tmp/kubernetes/config.yml'
    defaults:
      run:
        working-directory: ${{ inputs.folder_path }}
    steps:
      - name: Checking out the repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf33321

      - name: Create, save and validate KubeConfig file
        run: |

          # Create the folder for KubeConfig file
          mkdir -p ${{ env.KUBECONFIG_FOLDER }}

          # Save the KubeConfig file
          echo '${{ secrets.KUBECONFIG }}' >> ${{ env.KUBECONFIG }}

          # Validate KubeConfig file before deployment process starts
          KUBECONFIG_CHECK=$(kubectl get ns > /dev/null; echo $?)

          if [[ "$KUBECONFIG_CHECK" != "0" ]]
          then
            echo "Connection to self hosted Kuberetes cluster failed, please check the KUBECONFIG secret"
            exit 1
          else
            echo "Connection to self hosted Kubernetes cluster is successful!"
          fi

      - name: Initializing TFVARS file to be used for deployment
        run: echo '${{ secrets.TFVARS }}' >> terraform.tfvars.json

      - name: Running script before Tofu Initialization
        if: ${{ inputs.pre_init_script != '' }}
        run: ${{ inputs.pre_init_script }}

      - name: Tofu Initialization
        run: tofu init

      - name: Running script before Tofu Deployment Plan
        if: ${{ inputs.pre_plan_script != '' }}
        run: ${{ inputs.pre_plan_script }}

      - name: Tofu Deployment Plan
        env:
          TF_VAR_artifact_version: ${{ inputs.artifact_version }}
        run: tofu plan -var-file terraform.tfvars.json

      - name: Running script before Tofu Deployment Apply
        if: ${{ inputs.pre_apply_script != '' }}
        run: ${{ inputs.pre_apply_script }}

      - name: Tofu Deployment Apply
        env:
          TF_VAR_artifact_version: ${{ inputs.artifact_version }}
        run: tofu apply -var-file terraform.tfvars.json -auto-approve

      - name: Running script after Tofu Deployment Apply
        if: ${{ inputs.post_apply_script != '' }}
        run: ${{ inputs.post_apply_script }}

